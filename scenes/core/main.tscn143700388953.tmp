[gd_scene load_steps=7 format=3 uid="uid://c5p6vc5p30yl0"]

[ext_resource type="Script" uid="uid://c5ofuugn61yct" path="res://scripts/managers/population_manager.gd" id="1"]
[ext_resource type="Script" uid="uid://3ql35me6ur6t" path="res://scripts/managers/environment_manager.gd" id="2"]
[ext_resource type="Script" uid="uid://6nb2rg2tm6jq" path="res://scripts/managers/statistics_collector.gd" id="3"]
[ext_resource type="Script" uid="uid://ccponkyvrm4pp" path="res://scripts/managers/visual_manager.gd" id="4"]
[ext_resource type="PackedScene" uid="uid://7u7l6evisnec" path="res://scenes/ui/hud.tscn" id="5"]

[sub_resource type="GDScript" id="main_controller"]
script/source = "extends Control

# Main scene controller - handles initialization and viewport sizing

@onready var sub_viewport = $SimulationView/SubViewport
@onready var sim_manager = get_node(\"/root/SimulationManager\")

func _ready():
	# Initialize managers
	sim_manager.population_manager = $Managers/PopulationManager
	sim_manager.environment_manager = $Managers/EnvironmentManager
	sim_manager.statistics_collector = $Managers/StatisticsCollector
	sim_manager.visual_manager = $SimulationView/SubViewport/SimulationSpace/VisualManager
	
	# Setup HUD
	var hud = $HUD
	hud.sim_manager = sim_manager
	
	# Defer viewport sizing until after layout is ready
	sim_manager.visual_manager.organism_clicked.connect(hud.show_organism_details)

	call_deferred("
script/source = "extends Control

# Main scene controller - handles initialization and viewport sizing

@onready var sub_viewport = $SimulationView/SubViewport
@onready var sim_manager = get_node(\"/root/SimulationManager\")

func _ready():
	# Initialize managers
	sim_manager.population_manager = $Managers/PopulationManager
	sim_manager.environment_manager = $Managers/EnvironmentManager
	sim_manager.statistics_collector = $Managers/StatisticsCollector
	sim_manager.visual_manager = $SimulationView/SubViewport/SimulationSpace/VisualManager
	
	# Setup HUD
	var hud = $HUD
	hud.sim_manager = sim_manager
	
	# Defer viewport sizing until after layout is ready
	sim_manager.visual_manager.organism_clicked.connect(hud.show_organism_details)

	call_deferred("
")

func _initialize_viewport():
	# Set initial viewport size to match window
	_update_viewport_size()
	
	# Connect to window resize
	get_viewport().size_changed.connect(_on_window_resized)
	
	# Start simulation
	sim_manager.reset_simulation()

func _on_window_resized():
	_update_viewport_size()
	
	# Update population manager bounds
	if sim_manager and sim_manager.population_manager:
		sim_manager.population_manager.world_bounds = Rect2(Vector2.ZERO, sub_viewport.size)

func _update_viewport_size():
	if sub_viewport:
		# Get the actual window size
		var window_size = get_viewport().get_visible_rect().size
		sub_viewport.size = Vector2i(int(window_size.x), int(window_size.y))
		
		print(\"SubViewport resized to: \", sub_viewport.size)

func _process(_delta):
	# Continuously sync viewport size (fallback in case resize signal doesn't fire)
	if sub_viewport:
		var window_size = get_viewport().get_visible_rect().size
		var target_size = Vector2i(int(window_size.x), int(window_size.y))
		if sub_viewport.size != target_size:
			sub_viewport.size = target_size
			if sim_manager and sim_manager.population_manager:
				sim_manager.population_manager.world_bounds = Rect2(Vector2.ZERO, window_size)
[nodename" = "Main"
type = "Control"
"]layout_mode" = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Main" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("main_controller")

[node name="Background" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.05, 0.05, 0.05, 1)

[node name="SimulationView" type="SubViewportContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="SimulationView"]
handle_input_locally = false
size = Vector2i(1152, 648)
render_target_update_mode = 4

[node name="SimulationSpace" type="Node2D" parent="SimulationView/SubViewport"]

[node name="VisualManager" type="Node2D" parent="SimulationView/SubViewport/SimulationSpace"]
script = ExtResource("4")

[node name="Managers" type="Node" parent="."]

[node name="PopulationManager" type="Node" parent="Managers"]
script = ExtResource("1")

[node name="EnvironmentManager" type="Node" parent="Managers"]
script = ExtResource("2")

[node name="StatisticsCollector" type="Node" parent="Managers"]
script = ExtResource("3")

[node name="HUD" parent="." instance=ExtResource("5")]
